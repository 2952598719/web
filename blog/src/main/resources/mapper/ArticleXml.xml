<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.orosirian.blog.mapper.ArticleMapper">

    <resultMap id="ArticleBriefMap" type="top.orosirian.blog.entity.vo.ArticleBriefVO">
        <id property="articleUid" column="article_uid" />
        <result property="userName" column="user_name" />
        <result property="nickName" column="nick_name" />
        <result property="avatarUrl" column="image_url" />
        <result property="title" column="title" />
        <result property="likeNum" column="like_num" />
        <result property="dislikeNum" column="dislike_num" />
        <result property="viewCount" column="view_count" />
        <result property="commentCount" column="comment_count" />
        <result property="createTime" column="create_time" />
    </resultMap>

    <resultMap id="ArticleDetailMap" type="top.orosirian.blog.entity.vo.ArticleDetailVO">
        <id property="articleUid" column="article_uid" />
        <result property="userName" column="user_name" />
        <result property="nickName" column="nick_name" />
        <result property="avatarUrl" column="image_url" />
        <result property="title" column="title" />
        <result property="likeNum" column="like_num" />
        <result property="dislikeNum" column="dislike_num" />
        <result property="viewCount" column="view_count" />
        <result property="commentCount" column="comment_count" />
        <result property="articleContent" column="article_content" />
        <result property="createTime" column="create_time" />
        <result property="updateTime" column="update_time" />
    </resultMap>

    <insert id="insertArticle">
        INSERT INTO t_article(article_uid, user_uid, title, article_content, article_type)
        VALUES (#{articleUid}, #{userUid}, #{title}, #{articleContent}, #{articleType})
    </insert>

    <update id="updateArticle">
        UPDATE t_article
        SET title=#{title}, article_content=#{articleContent}, update_time=NOW()
        WHERE article_uid = #{articleUid} AND article_type = 0
    </update>

    <update id="updateViewCount">
        UPDATE t_article
        SET view_count = view_count + 1
        WHERE article_uid = #{articleUid} AND article_type = 0
    </update>

    <update id="deleteArticle">
        UPDATE t_article
        SET article_type = 1
        WHERE article_uid = #{articleUid}
    </update>

    <select id="selectArticle" resultMap="ArticleDetailMap">
        SELECT a.article_uid, u.user_name, u.nick_name, i.image_url, a.title,
            (SELECT COUNT(*) FROM t_vote v WHERE a.article_uid = v.target_uid AND v.vote_type = 1) AS like_num,
            (SELECT COUNT(*) FROM t_vote v WHERE a.article_uid = v.target_uid AND v.vote_type = 0) AS dislike_num,
            a.view_count,
            (SELECT COUNT(*) FROM t_comment c WHERE a.article_uid = c.article_uid AND c.comment_type = 0) AS comment_count,
            a.article_content, a.create_time, a.update_time
        FROM t_article a 
            LEFT JOIN t_user u ON a.user_uid = u.user_uid
            LEFT JOIN t_image i ON u.avatar_uid = i.image_uid
        WHERE a.article_uid = #{articleUid} AND a.article_type = 0
    </select>

    <select id="selectArticleList" resultMap="ArticleBriefMap">
        SELECT a.article_uid, u.user_name, u.nick_name, i.image_url, a.title, 
            (SELECT COUNT(*) FROM t_vote v WHERE a.article_uid = v.target_uid AND v.vote_type = 1) AS like_num,
            (SELECT COUNT(*) FROM t_vote v WHERE a.article_uid = v.target_uid AND v.vote_type = 0) AS dislike_num,
            a.view_count,
            (SELECT COUNT(*) FROM t_comment c WHERE a.article_uid = c.article_uid AND c.comment_type = 0) AS comment_count,
            a.create_time
        FROM t_article AS a 
            LEFT JOIN t_user AS u ON a.user_uid = u.user_uid
            LEFT JOIN t_image i ON u.avatar_uid = i.image_uid
        WHERE a.article_type = 0
        ORDER BY a.create_time DESC
    </select>

    <select id="selectTitleArticleList" resultMap="ArticleBriefMap">
        SELECT a.article_uid, u.user_name, u.nick_name, i.image_url, a.title, 
            (SELECT COUNT(*) FROM t_vote v WHERE a.article_uid = v.target_uid AND v.vote_type = 1) AS like_num,
            (SELECT COUNT(*) FROM t_vote v WHERE a.article_uid = v.target_uid AND v.vote_type = 0) AS dislike_num,
            a.view_count,
            (SELECT COUNT(*) FROM t_comment c WHERE a.article_uid = c.article_uid AND c.comment_type = 0) AS comment_count,
            a.create_time
        FROM t_article AS a 
            LEFT JOIN t_user AS u ON a.user_uid = u.user_uid
            LEFT JOIN t_image i ON u.avatar_uid = i.image_uid
        WHERE a.article_type = 0 AND a.title LIKE CONCAT('%', #{title}, '%')
        ORDER BY a.create_time DESC
    </select>

    <select id="selectUserArticleList" resultMap="ArticleBriefMap">
        SELECT a.article_uid, u.user_name, u.nick_name, i.image_url, a.title, a.view_count, a.create_time
        FROM t_article AS a 
            LEFT JOIN t_user AS u ON a.user_uid = u.user_uid
            LEFT JOIN t_image i ON u.avatar_uid = i.image_uid
        WHERE a.article_type = 0 AND a.user_uid = #{userUid}
        ORDER BY a.create_time DESC
    </select>
    
    <select id="selectTagArticleList" resultMap="ArticleBriefMap">
        SELECT a.article_uid, u.user_name, u.nick_name, i.image_url, a.title, a.view_count, a.create_time
        FROM t_article AS a 
            LEFT JOIN t_user AS u ON a.user_uid = u.user_uid
            LEFT JOIN t_image i ON u.avatar_uid = i.image_uid
            LEFT JOIN t_tag_article AS ta ON a.article_uid = ta.article_uid
        WHERE ta.tag_name = #{tagName} AND a.article_type = 0
        ORDER BY a.create_time DESC
    </select>

    <select id="selectCollectionArticleList" resultMap="ArticleBriefMap">
        SELECT a.article_uid, u.user_name, u.nick_name, i.image_url, a.title, a.view_count, a.create_time
        FROM t_collection_article AS ca
            LEFT JOIN t_article AS a ON ca.article_uid = a.article_uid
            LEFT JOIN t_user AS u ON a.user_uid = u.user_uid
            LEFT JOIN t_image i ON u.avatar_uid = i.image_uid
        WHERE ca.collection_uid = #{collectionUid} AND a.article_type = 0
        ORDER BY a.create_time DESC
    </select>

    <select id="selectAuthorUid">
        SELECT user_uid
        FROM t_article
        WHERE article_uid = #{articleUid} AND article_type = 0
    </select>

    <select id="isArticleExist">
        SELECT COUNT(*) &gt; 0
        FROM t_article
        WHERE article_uid = #{articleUid} AND article_type = 0
    </select>

    <select id="isArticleBelong">
        SELECT COUNT(*) &gt; 0
        FROM t_article
        WHERE article_uid = #{articleUid} AND user_uid = #{userUid} AND article_type = 0
    </select>

</mapper>